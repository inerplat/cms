apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cms-admin
  name: cms-admin
  namespace: cms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cms-admin
  template:
    metadata:
      labels:
        app: cms-admin
    spec:
      # initContainers:
      # - image: inerplat/cms
      #   name: init
      #   imagePullPolicy: Always

      #   command: ["/bin/bash", "-c", "/usr/local/bin/init-script.sh"]
      #   env:
      #     - name: CMS_CONFIG
      #       value: /usr/local/etc/cms.conf
      #   volumeMounts:
      #   - name: codecov-volume
      #     mountPath: /home/cmsuser/cms/codecov
      #   - name: cms-script
      #     mountPath: /usr/local/bin/init-script.sh
      #     subPath: init-script.sh
      shareProcessNamespace: true   
      containers:
      - image: inerplat/cms
        imagePullPolicy: IfNotPresent
        name: logging
        command: ["/home/cmsuser/cms/scripts/cmsLogService"]
        env:
          - name: CMS_CONFIG
            value: /usr/local/etc/cms.conf
      - image: inerplat/cms
        imagePullPolicy: IfNotPresent
        name: admin-webserver
        command: ["/home/cmsuser/cms/scripts/cmsAdminWebServer"]
        lifecycle:
          postStart:
            exec: 
              command: ["/bin/bash", "-c", "cmsAddAdmin -p admin admin || true"]
        env:
          - name: CMS_CONFIG
            value: /usr/local/etc/cms.conf
      - image: inerplat/cms
        imagePullPolicy: IfNotPresent
        name: resource
        command: ["cmsResourceService", "-a", "1"]
        env:
          - name: CMS_CONFIG
            value: /usr/local/etc/cms.conf

      - image: inerplat/cms
        imagePullPolicy: IfNotPresent
        name: ranking
        command: ["cmsRankingWebServer"]
        env:
          - name: CMS_CONFIG
            value: /usr/local/etc/cms.conf

      volumes:
      - name: codecov-volume
        emptyDir: {}
      - name: cms-script
        configMap:
          name: cms-script
          defaultMode: 0755
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cms-admin
  name: cms-admin
  namespace: cms
spec:
  ports:
  - port: 28000
    protocol: TCP
    targetPort: 28000
    name: resource
  - port: 28500
    protocol: TCP
    targetPort: 28500
    name: scoring
  - port: 22000
    protocol: TCP
    targetPort: 22000
    name: checker
  - port: 25000
    protocol: TCP
    targetPort: 25000
    name: evaluation
  - port: 21100
    protocol: TCP
    targetPort: 21100
    name: admin-webserver
  - port: 28600
    protocol: TCP
    targetPort: 28600
    name: proxy
  - port: 25123
    protocol: TCP
    targetPort: 25123
    name: printing
  - port: 29000
    protocol: TCP
    targetPort: 29000
    name: logging
  - port: 8888
    protocol: TCP
    targetPort: 8888
    name: contest
  - port: 8889
    protocol: TCP
    targetPort: 8889
    name: admin
  selector:
    app: cms-admin
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cms-script
  namespace: cms
data:
  init-script.sh: |
    #!/bin/sh
    set -e
    cmsInitDB

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cms-worker
  name: cms-worker
  namespace: cms
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cms-worker
  template:
    metadata:
      labels:
        app: cms-worker
    spec:
      shareProcessNamespace: true   
      containers:
      - image: inerplat/cms
        imagePullPolicy: Always
        name: logging
        command: ["/home/cmsuser/cms/scripts/cmsWorker"]
        lifecycle:
          postStart:
            exec:
              command: ["/bin/bash", "-c", "sudo socat TCP-LISTEN:26001,reuseaddr,fork TCP:localhost:26000 > /dev/null 2>&1 &"]
        env:
          - name: CMS_CONFIG
            value: /usr/local/etc/cms.conf
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cms-worker
  name: cms-worker
  namespace: cms
spec:
  ports:
  - port: 26000
    protocol: TCP
    targetPort: 26001
    name: worker
  selector:
    app: cms-worker
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  name: cms-admin
  namespace: cms
spec:
  ingressClassName: nginx
  tls:
    - secretName: cms-admin-tls
      hosts:
        - cms-admin.inerplat.com
  rules:
  - host: cms-admin.inerplat.com
    http:
      paths:
      - backend:
          service:
            name: cms-admin
            port:
              number: 8889
        path: /
        pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  name: cms-contest
  namespace: cms
spec:
  ingressClassName: nginx
  tls:
    - secretName: cms-contest-tls
      hosts:
        - cms-contest.inerplat.com
  rules:
  - host: cms-contest.inerplat.com
    http:
      paths:
      - backend:
          service:
            name: cms-admin
            port:
              number: 8888
        path: /
        pathType: Prefix
